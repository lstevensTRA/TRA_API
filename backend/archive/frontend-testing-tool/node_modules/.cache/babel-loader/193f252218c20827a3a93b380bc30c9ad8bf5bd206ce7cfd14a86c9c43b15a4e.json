{"ast":null,"code":"var _jsxFileName = \"/Users/lindseystevens/TRA API backend/backend/frontend-testing-tool/src/PatternLearningFeedback.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './PatternLearningFeedback.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction highlightMatch(context, match) {\n  if (!match) return context;\n  const idx = context.toLowerCase().indexOf(match.toLowerCase());\n  if (idx === -1) return context;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [context.slice(0, idx), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        background: '#ffe066',\n        fontWeight: 'bold'\n      },\n      children: context.slice(idx, idx + match.length)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), context.slice(idx + match.length)]\n  }, void 0, true);\n}\nfunction RegexTestModal({\n  open,\n  onClose,\n  context,\n  defaultPattern,\n  serverUrl\n}) {\n  _s();\n  const [pattern, setPattern] = useState(defaultPattern || '');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleTest = async () => {\n    setLoading(true);\n    setResult(null);\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n\n      const resp = await fetch(`${serverUrl}/pattern-learning/test-regex`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pattern,\n          text: context,\n          context_chars: 50\n        }),\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      const data = await resp.json();\n      setResult(data);\n    } catch (e) {\n      if (e.name === 'AbortError') {\n        setResult({\n          matches: [],\n          contexts: ['Error: Request timed out after 10 seconds']\n        });\n      } else {\n        setResult({\n          matches: [],\n          contexts: ['Error: ' + e.message]\n        });\n      }\n    }\n    setLoading(false);\n  };\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      background: '#0008',\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff',\n        padding: 32,\n        borderRadius: 12,\n        minWidth: 400,\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live Regex Tester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Regex Pattern:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: pattern,\n          onChange: e => setPattern(e.target.value),\n          style: {\n            width: '100%',\n            fontFamily: 'monospace',\n            fontSize: 16,\n            marginTop: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTest,\n        style: {\n          marginBottom: 16,\n          background: '#6c47ff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 6,\n          padding: '8px 20px',\n          fontWeight: 'bold',\n          cursor: 'pointer'\n        },\n        disabled: loading,\n        children: loading ? 'Testing...' : 'Test Regex'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Matches:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }, this), \" \", result.matches && result.matches.length > 0 ? result.matches.join(', ') : 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Context:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), result.contexts && result.contexts.map((ctx, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#f6f6f6',\n            padding: 8,\n            marginBottom: 4,\n            borderRadius: 4\n          },\n          children: result.matches && result.matches[i] ? highlightMatch(ctx, result.matches[i]) : ctx\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: {\n          marginTop: 16,\n          background: '#eee',\n          color: '#333',\n          border: 'none',\n          borderRadius: 6,\n          padding: '8px 20px',\n          fontWeight: 'bold',\n          cursor: 'pointer'\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(RegexTestModal, \"/M5s088eQQHNLd74cIz2cFbXpME=\");\n_c = RegexTestModal;\nconst PatternLearningFeedback = ({\n  serverUrl,\n  caseId = \"54820\"\n}) => {\n  _s2();\n  const [feedback, setFeedback] = useState({\n    extractionId: '',\n    isCorrect: true,\n    comments: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [enhancedAnalysis, setEnhancedAnalysis] = useState(null);\n  const [regexModal, setRegexModal] = useState({\n    open: false,\n    context: '',\n    pattern: ''\n  });\n  const [error, setError] = useState(null);\n  const [testResult, setTestResult] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [showLogs, setShowLogs] = useState(false);\n  const [logPolling, setLogPolling] = useState(false);\n  const pollingRef = useRef();\n  const [feedbackStatus, setFeedbackStatus] = useState({}); // {extraction_id: 'trained'|'error'}\n  const [suggestModal, setSuggestModal] = useState({\n    open: false,\n    extractionId: null\n  });\n  const [suggestValue, setSuggestValue] = useState('');\n  const [activeTab, setActiveTab] = useState('endpoint-tester');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [extractions, setExtractions] = useState([]);\n  const [formDetections, setFormDetections] = useState([]);\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(new Set());\n  const [suggestions, setSuggestions] = useState({});\n  const [showRegexTester, setShowRegexTester] = useState(false);\n  const [regexTestPattern, setRegexTestPattern] = useState('');\n  const [regexTestText, setRegexTestText] = useState('');\n  const [regexTestResults, setRegexTestResults] = useState(null);\n\n  // New state for pattern learning dashboard\n  const [patternStats, setPatternStats] = useState(null);\n  const [flaggedPatterns, setFlaggedPatterns] = useState([]);\n  const [patternSuggestions, setPatternSuggestions] = useState([]);\n  const [learningStats, setLearningStats] = useState(null);\n  const API_BASE = 'http://localhost:8000';\n  const fetchEnhancedAnalysis = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/wi/${caseId}`);\n      const data = await resp.json();\n      if (data.success) {\n        setEnhancedAnalysis(data.data);\n      } else {\n        setError(data.message || 'Failed to fetch analysis');\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n    setLoading(false);\n  };\n  const handleFeedback = async (extractionId, isCorrect) => {\n    if (feedbackStatus[extractionId] === 'trained') return;\n    if (!isCorrect) {\n      setSuggestModal({\n        open: true,\n        extractionId\n      });\n      return;\n    }\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: isCorrect,\n          correct_value: null,\n          comments: null\n        })\n      });\n      if (resp.ok) {\n        setFeedbackStatus(prev => ({\n          ...prev,\n          [extractionId]: 'trained'\n        }));\n        setMessage('Feedback recorded!');\n      } else {\n        setFeedbackStatus(prev => ({\n          ...prev,\n          [extractionId]: 'error'\n        }));\n        setMessage('Error recording feedback');\n      }\n    } catch (e) {\n      setFeedbackStatus(prev => ({\n        ...prev,\n        [extractionId]: 'error'\n      }));\n      setMessage('Error recording feedback: ' + e.message);\n    }\n  };\n  const handleSuggestSubmit = async () => {\n    const extractionId = suggestModal.extractionId;\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: false,\n          correct_value: suggestValue,\n          comments: 'User suggested value/pattern'\n        })\n      });\n      if (resp.ok) {\n        setFeedbackStatus(prev => ({\n          ...prev,\n          [extractionId]: 'trained'\n        }));\n        setMessage('Suggestion recorded!');\n      } else {\n        setFeedbackStatus(prev => ({\n          ...prev,\n          [extractionId]: 'error'\n        }));\n        setMessage('Error recording suggestion');\n      }\n    } catch (e) {\n      setFeedbackStatus(prev => ({\n        ...prev,\n        [extractionId]: 'error'\n      }));\n      setMessage('Error recording suggestion: ' + e.message);\n    }\n    setSuggestModal({\n      open: false,\n      extractionId: null\n    });\n    setSuggestValue('');\n  };\n  const handleFormTypeFeedback = async (extractionId, correctFormType) => {\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: false,\n          correct_value: correctFormType,\n          comments: `Form type should be ${correctFormType}`\n        })\n      });\n      if (resp.ok) {\n        setMessage(`Form type feedback recorded: should be ${correctFormType}`);\n      } else {\n        setMessage('Error recording form type feedback');\n      }\n    } catch (e) {\n      setMessage('Error recording form type feedback: ' + e.message);\n    }\n  };\n  const handleFormDetectionFeedback = async (formDetectionId, isCorrect, correctFormType = null) => {\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          extraction_id: formDetectionId,\n          is_correct: isCorrect,\n          correct_value: correctFormType,\n          comments: correctFormType ? `Form detection should be ${correctFormType}` : 'Form detection feedback'\n        })\n      });\n      if (resp.ok) {\n        setMessage(`Form detection feedback recorded: ${isCorrect ? 'Correct' : 'Incorrect'}${correctFormType ? ` (should be ${correctFormType})` : ''}`);\n      } else {\n        setMessage('Error recording form detection feedback');\n      }\n    } catch (e) {\n      setMessage('Error recording form detection feedback: ' + e.message);\n    }\n  };\n  const groupExtractionsByForm = extractions => {\n    const grouped = {};\n    extractions.forEach(ex => {\n      const formDetectionId = ex.form_detection_id || 'unknown';\n      if (!grouped[formDetectionId]) {\n        grouped[formDetectionId] = {\n          formDetection: {\n            form_detection_id: formDetectionId,\n            form_type: ex.form_type,\n            form_confidence: ex.form_confidence,\n            form_pattern: ex.form_pattern\n          },\n          extractions: []\n        };\n      }\n      grouped[formDetectionId].extractions.push(ex);\n    });\n    return grouped;\n  };\n  const getConfidenceColor = confidence => {\n    if (confidence >= 0.8) return '#4caf50'; // Green\n    if (confidence >= 0.6) return '#ff9800'; // Orange\n    return '#f44336'; // Red\n  };\n  const getConfidenceBackground = confidence => {\n    if (confidence < 0.7) return '#fff3cd'; // Light yellow warning\n    return 'transparent';\n  };\n  const getWarningIcon = extraction => {\n    var _extraction$pattern_s;\n    const warnings = [];\n\n    // Low confidence warning\n    if (extraction.field_confidence < 0.7) {\n      warnings.push('⚠️ Low confidence');\n    }\n\n    // False positive warning\n    if (((_extraction$pattern_s = extraction.pattern_stats) === null || _extraction$pattern_s === void 0 ? void 0 : _extraction$pattern_s.false_positive_rate) > 0.3) {\n      warnings.push('🚨 High false positive rate');\n    }\n\n    // Zero value warning\n    if (extraction.extracted_value === '$0.00' || extraction.extracted_value === '0.00') {\n      warnings.push('💰 Zero value detected');\n    }\n    return warnings;\n  };\n\n  // Fetch logs from backend\n  const fetchLogs = async () => {\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/logs?limit=200`);\n      if (resp.ok) {\n        const data = await resp.json();\n        setLogs(data.logs || []);\n      }\n    } catch (e) {\n      console.error('Error fetching logs:', e);\n    }\n  };\n\n  // Clear logs\n  const clearLogs = async () => {\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/logs`, {\n        method: 'DELETE'\n      });\n      if (resp.ok) {\n        setLogs([]);\n        setMessage('Logs cleared');\n      }\n    } catch (e) {\n      setMessage('Error clearing logs: ' + e.message);\n    }\n  };\n\n  // Start log polling\n  const startLogPolling = () => {\n    setLogPolling(true);\n  };\n\n  // Stop log polling\n  const stopLogPolling = () => {\n    setLogPolling(false);\n  };\n\n  // Poll logs when logPolling is true\n  useEffect(() => {\n    if (!logPolling) return;\n    pollingRef.current = setInterval(() => {\n      fetchLogs();\n    }, 1000);\n    return () => clearInterval(pollingRef.current);\n  }, [logPolling]);\n\n  // Get log level color\n  const getLogLevelColor = level => {\n    switch (level) {\n      case 'ERROR':\n        return '#dc3545';\n      case 'WARNING':\n        return '#ffc107';\n      case 'INFO':\n        return '#17a2b8';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  // Format timestamp\n  const formatTimestamp = timestamp => {\n    try {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString();\n    } catch {\n      return timestamp;\n    }\n  };\n  const runEnhancedAnalysis = async () => {\n    if (!caseId.trim() || !documentUrls.trim()) {\n      setMessage('Please enter both Case ID and Document URLs');\n      return;\n    }\n    setEnhancedAnalysis(null);\n    setMessage('Starting enhanced analysis...');\n    setShowLogs(true);\n    startLogPolling();\n    try {\n      const urls = documentUrls.split('\\n').filter(url => url.trim());\n      const requestBody = {\n        case_id: caseId.trim(),\n        document_urls: urls,\n        quick_mode: quickMode\n      };\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/enhanced-wi-analysis`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (resp.ok) {\n        var _result$total_time;\n        const result = await resp.json();\n        setEnhancedAnalysis(result);\n        setMessage(`✅ Enhanced analysis completed in ${((_result$total_time = result.total_time) === null || _result$total_time === void 0 ? void 0 : _result$total_time.toFixed(2)) || 0}s`);\n      } else {\n        const error = await resp.text();\n        setMessage(`❌ Analysis failed: ${error}`);\n      }\n    } catch (e) {\n      setMessage(`❌ Analysis error: ${e.message}`);\n    } finally {\n      stopLogPolling();\n      setTimeout(fetchLogs, 1000);\n    }\n  };\n\n  // New functions for pattern learning dashboard\n  const fetchLearningStats = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/learning-stats`);\n      const data = await response.json();\n      setLearningStats(data);\n    } catch (error) {\n      console.error('Error fetching learning stats:', error);\n    }\n  };\n  const fetchPatternPerformance = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/pattern-performance`);\n      const data = await response.json();\n      setPatternStats(data);\n    } catch (error) {\n      console.error('Error fetching pattern performance:', error);\n    }\n  };\n  const fetchFlaggedPatterns = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/flagged-patterns`);\n      const data = await response.json();\n      setFlaggedPatterns(data.flagged_patterns || []);\n    } catch (error) {\n      console.error('Error fetching flagged patterns:', error);\n    }\n  };\n  const fetchPatternSuggestions = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/pattern-suggestions`);\n      const data = await response.json();\n      setPatternSuggestions(data.suggestions || []);\n    } catch (error) {\n      console.error('Error fetching pattern suggestions:', error);\n    }\n  };\n  const loadPatternLearningData = () => {\n    fetchLearningStats();\n    fetchPatternPerformance();\n    fetchFlaggedPatterns();\n    fetchPatternSuggestions();\n  };\n  const renderPatternLearningDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pattern-learning-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pattern Learning Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadPatternLearningData,\n        className: \"refresh-btn\",\n        children: \"\\uD83D\\uDD04 Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), learningStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Learning Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: learningStats.total_patterns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Patterns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: learningStats.flagged_patterns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Flagged Patterns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: learningStats.total_feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [learningStats.feedback_accuracy.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Feedback Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [learningStats.avg_success_rate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Avg Success Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: learningStats.total_extractions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Extractions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this), flaggedPatterns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flagged-patterns\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDEA8 Flagged Patterns (\", flaggedPatterns.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flagged-patterns-list\",\n        children: flaggedPatterns.map((pattern, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flagged-pattern-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pattern-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pattern-id\",\n              children: pattern.pattern_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"failure-count\",\n              children: [\"\\u274C \", pattern.failure_count, \" failures\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pattern-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Success: \", pattern.success_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Total: \", pattern.total_extractions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Confidence: \", (pattern.average_confidence * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pattern-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pattern:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: pattern.pattern_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pattern-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Field:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this), \" \", pattern.field_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }, this), patternSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pattern-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDCA1 Pattern Suggestions (\", patternSuggestions.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-list\",\n        children: patternSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suggestion-type\",\n              children: suggestion.suggestion_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suggestion-confidence\",\n              children: [\"Confidence: \", (suggestion.confidence * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-pattern\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Suggested Pattern:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              children: suggestion.suggested_pattern\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-reasoning\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reasoning:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), \" \", suggestion.reasoning]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary\",\n              children: \"Apply Suggestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-secondary\",\n              children: \"Test Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), patternStats && patternStats.patterns && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pattern-performance\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC8 Pattern Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performance-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pattern ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Success Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patternStats.patterns.map((pattern, index) => {\n              const successRate = pattern.total_extractions > 0 ? (pattern.success_count / pattern.total_extractions * 100).toFixed(1) : 0;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: pattern.flagged_for_review ? 'flagged-row' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pattern.pattern_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pattern.field_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [successRate, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pattern.total_extractions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(pattern.average_confidence * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pattern.flagged_for_review ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-flagged\",\n                    children: \"\\uD83D\\uDEA8 Flagged\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-ok\",\n                    children: \"\\u2705 OK\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }, this), !learningStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pattern learning data available. Click \\\"Refresh Data\\\" to load statistics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pattern-learning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'endpoint-tester' ? 'active' : '',\n        onClick: () => setActiveTab('endpoint-tester'),\n        children: \"Endpoint Tester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'pattern-dashboard' ? 'active' : '',\n        onClick: () => setActiveTab('pattern-dashboard'),\n        children: \"Pattern Learning Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), activeTab === 'endpoint-tester' && renderEndpointTester(), activeTab === 'pattern-dashboard' && renderPatternLearningDashboard(), showRegexTester && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Regex Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowRegexTester(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Regex Pattern:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: regexTestPattern,\n              onChange: e => setRegexTestPattern(e.target.value),\n              placeholder: \"Enter regex pattern...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Test Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: regexTestText,\n              onChange: e => setRegexTestText(e.target.value),\n              placeholder: \"Enter text to test against...\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testRegexPattern,\n            className: \"btn-primary\",\n            children: \"Test Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this), regexTestResults && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Test Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Matches found: \", regexTestResults.match_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this), regexTestResults.matches.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Matches:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: regexTestResults.matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: match\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n};\n_s2(PatternLearningFeedback, \"ag72v1vKsAf8dWbu3ghHfeXuqDA=\");\n_c2 = PatternLearningFeedback;\nexport default PatternLearningFeedback;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexTestModal\");\n$RefreshReg$(_c2, \"PatternLearningFeedback\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","highlightMatch","context","match","idx","toLowerCase","indexOf","children","slice","style","background","fontWeight","length","fileName","_jsxFileName","lineNumber","columnNumber","RegexTestModal","open","onClose","defaultPattern","serverUrl","_s","pattern","setPattern","result","setResult","loading","setLoading","handleTest","controller","AbortController","timeoutId","setTimeout","abort","resp","fetch","method","headers","body","JSON","stringify","text","context_chars","signal","clearTimeout","data","json","e","name","matches","contexts","message","position","top","left","width","height","zIndex","display","alignItems","justifyContent","padding","borderRadius","minWidth","maxWidth","marginBottom","value","onChange","target","fontFamily","fontSize","marginTop","onClick","color","border","cursor","disabled","join","map","ctx","i","_c","PatternLearningFeedback","caseId","_s2","feedback","setFeedback","extractionId","isCorrect","comments","setMessage","enhancedAnalysis","setEnhancedAnalysis","regexModal","setRegexModal","error","setError","testResult","setTestResult","logs","setLogs","showLogs","setShowLogs","logPolling","setLogPolling","pollingRef","feedbackStatus","setFeedbackStatus","suggestModal","setSuggestModal","suggestValue","setSuggestValue","activeTab","setActiveTab","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","extractions","setExtractions","formDetections","setFormDetections","feedbackSubmitted","setFeedbackSubmitted","Set","suggestions","setSuggestions","showRegexTester","setShowRegexTester","regexTestPattern","setRegexTestPattern","regexTestText","setRegexTestText","regexTestResults","setRegexTestResults","patternStats","setPatternStats","flaggedPatterns","setFlaggedPatterns","patternSuggestions","setPatternSuggestions","learningStats","setLearningStats","API_BASE","fetchEnhancedAnalysis","success","handleFeedback","extraction_id","is_correct","correct_value","ok","prev","handleSuggestSubmit","handleFormTypeFeedback","correctFormType","handleFormDetectionFeedback","formDetectionId","groupExtractionsByForm","grouped","forEach","ex","form_detection_id","formDetection","form_type","form_confidence","form_pattern","push","getConfidenceColor","confidence","getConfidenceBackground","getWarningIcon","extraction","_extraction$pattern_s","warnings","field_confidence","pattern_stats","false_positive_rate","extracted_value","fetchLogs","console","clearLogs","startLogPolling","stopLogPolling","current","setInterval","clearInterval","getLogLevelColor","level","formatTimestamp","timestamp","date","Date","toLocaleTimeString","runEnhancedAnalysis","trim","documentUrls","urls","split","filter","url","requestBody","case_id","document_urls","quick_mode","quickMode","_result$total_time","total_time","toFixed","fetchLearningStats","response","fetchPatternPerformance","fetchFlaggedPatterns","flagged_patterns","fetchPatternSuggestions","loadPatternLearningData","renderPatternLearningDashboard","className","total_patterns","total_feedback","feedback_accuracy","avg_success_rate","total_extractions","index","pattern_id","failure_count","success_count","average_confidence","pattern_text","field_name","suggestion","suggestion_type","suggested_pattern","reasoning","patterns","successRate","flagged_for_review","renderEndpointTester","type","placeholder","rows","testRegexPattern","match_count","_c2","$RefreshReg$"],"sources":["/Users/lindseystevens/TRA API backend/backend/frontend-testing-tool/src/PatternLearningFeedback.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './PatternLearningFeedback.css';\n\nfunction highlightMatch(context, match) {\n  if (!match) return context;\n  const idx = context.toLowerCase().indexOf(match.toLowerCase());\n  if (idx === -1) return context;\n  return (\n    <>\n      {context.slice(0, idx)}\n      <span style={{ background: '#ffe066', fontWeight: 'bold' }}>{context.slice(idx, idx + match.length)}</span>\n      {context.slice(idx + match.length)}\n    </>\n  );\n}\n\nfunction RegexTestModal({ open, onClose, context, defaultPattern, serverUrl }) {\n  const [pattern, setPattern] = useState(defaultPattern || '');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleTest = async () => {\n    setLoading(true);\n    setResult(null);\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n      \n      const resp = await fetch(`${serverUrl}/pattern-learning/test-regex`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ pattern, text: context, context_chars: 50 }),\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      const data = await resp.json();\n      setResult(data);\n    } catch (e) {\n      if (e.name === 'AbortError') {\n        setResult({ matches: [], contexts: ['Error: Request timed out after 10 seconds'] });\n      } else {\n        setResult({ matches: [], contexts: ['Error: ' + e.message] });\n      }\n    }\n    setLoading(false);\n  };\n\n  if (!open) return null;\n  return (\n    <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: '#0008', zIndex: 1000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <div style={{ background: '#fff', padding: 32, borderRadius: 12, minWidth: 400, maxWidth: 600 }}>\n        <h3>Live Regex Tester</h3>\n        <div style={{ marginBottom: 12 }}>\n          <label>Regex Pattern:</label>\n          <input value={pattern} onChange={e => setPattern(e.target.value)} style={{ width: '100%', fontFamily: 'monospace', fontSize: 16, marginTop: 4 }} />\n        </div>\n        <button onClick={handleTest} style={{ marginBottom: 16, background: '#6c47ff', color: '#fff', border: 'none', borderRadius: 6, padding: '8px 20px', fontWeight: 'bold', cursor: 'pointer' }} disabled={loading}>\n          {loading ? 'Testing...' : 'Test Regex'}\n        </button>\n        {result && (\n          <div>\n            <div style={{ marginBottom: 8 }}><b>Matches:</b> {result.matches && result.matches.length > 0 ? result.matches.join(', ') : 'None'}</div>\n            <div style={{ marginBottom: 8 }}><b>Context:</b></div>\n            {result.contexts && result.contexts.map((ctx, i) => (\n              <div key={i} style={{ background: '#f6f6f6', padding: 8, marginBottom: 4, borderRadius: 4 }}>\n                {result.matches && result.matches[i] ? highlightMatch(ctx, result.matches[i]) : ctx}\n              </div>\n            ))}\n          </div>\n        )}\n        <button onClick={onClose} style={{ marginTop: 16, background: '#eee', color: '#333', border: 'none', borderRadius: 6, padding: '8px 20px', fontWeight: 'bold', cursor: 'pointer' }}>Close</button>\n      </div>\n    </div>\n  );\n}\n\nconst PatternLearningFeedback = ({ serverUrl, caseId = \"54820\" }) => {\n  const [feedback, setFeedback] = useState({ extractionId: '', isCorrect: true, comments: '' });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [enhancedAnalysis, setEnhancedAnalysis] = useState(null);\n  const [regexModal, setRegexModal] = useState({ open: false, context: '', pattern: '' });\n  const [error, setError] = useState(null);\n  const [testResult, setTestResult] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [showLogs, setShowLogs] = useState(false);\n  const [logPolling, setLogPolling] = useState(false);\n  const pollingRef = useRef();\n  const [feedbackStatus, setFeedbackStatus] = useState({}); // {extraction_id: 'trained'|'error'}\n  const [suggestModal, setSuggestModal] = useState({ open: false, extractionId: null });\n  const [suggestValue, setSuggestValue] = useState('');\n\n  const [activeTab, setActiveTab] = useState('endpoint-tester');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [extractions, setExtractions] = useState([]);\n  const [formDetections, setFormDetections] = useState([]);\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(new Set());\n  const [suggestions, setSuggestions] = useState({});\n  const [showRegexTester, setShowRegexTester] = useState(false);\n  const [regexTestPattern, setRegexTestPattern] = useState('');\n  const [regexTestText, setRegexTestText] = useState('');\n  const [regexTestResults, setRegexTestResults] = useState(null);\n  \n  // New state for pattern learning dashboard\n  const [patternStats, setPatternStats] = useState(null);\n  const [flaggedPatterns, setFlaggedPatterns] = useState([]);\n  const [patternSuggestions, setPatternSuggestions] = useState([]);\n  const [learningStats, setLearningStats] = useState(null);\n\n  const API_BASE = 'http://localhost:8000';\n\n  const fetchEnhancedAnalysis = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/wi/${caseId}`);\n      const data = await resp.json();\n      if (data.success) {\n        setEnhancedAnalysis(data.data);\n      } else {\n        setError(data.message || 'Failed to fetch analysis');\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n    setLoading(false);\n  };\n\n  const handleFeedback = async (extractionId, isCorrect) => {\n    if (feedbackStatus[extractionId] === 'trained') return;\n    if (!isCorrect) {\n      setSuggestModal({ open: true, extractionId });\n      return;\n    }\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: isCorrect,\n          correct_value: null,\n          comments: null\n        })\n      });\n      if (resp.ok) {\n        setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'trained' }));\n        setMessage('Feedback recorded!');\n      } else {\n        setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'error' }));\n        setMessage('Error recording feedback');\n      }\n    } catch (e) {\n      setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'error' }));\n      setMessage('Error recording feedback: ' + e.message);\n    }\n  };\n\n  const handleSuggestSubmit = async () => {\n    const extractionId = suggestModal.extractionId;\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: false,\n          correct_value: suggestValue,\n          comments: 'User suggested value/pattern'\n        })\n      });\n      if (resp.ok) {\n        setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'trained' }));\n        setMessage('Suggestion recorded!');\n      } else {\n        setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'error' }));\n        setMessage('Error recording suggestion');\n      }\n    } catch (e) {\n      setFeedbackStatus((prev) => ({ ...prev, [extractionId]: 'error' }));\n      setMessage('Error recording suggestion: ' + e.message);\n    }\n    setSuggestModal({ open: false, extractionId: null });\n    setSuggestValue('');\n  };\n\n  const handleFormTypeFeedback = async (extractionId, correctFormType) => {\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          extraction_id: extractionId,\n          is_correct: false,\n          correct_value: correctFormType,\n          comments: `Form type should be ${correctFormType}`\n        })\n      });\n      \n      if (resp.ok) {\n        setMessage(`Form type feedback recorded: should be ${correctFormType}`);\n      } else {\n        setMessage('Error recording form type feedback');\n      }\n    } catch (e) {\n      setMessage('Error recording form type feedback: ' + e.message);\n    }\n  };\n\n  const handleFormDetectionFeedback = async (formDetectionId, isCorrect, correctFormType = null) => {\n    try {\n      const resp = await fetch(`${serverUrl}/pattern-learning/feedback`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          extraction_id: formDetectionId,\n          is_correct: isCorrect,\n          correct_value: correctFormType,\n          comments: correctFormType ? `Form detection should be ${correctFormType}` : 'Form detection feedback'\n        })\n      });\n      \n      if (resp.ok) {\n        setMessage(`Form detection feedback recorded: ${isCorrect ? 'Correct' : 'Incorrect'}${correctFormType ? ` (should be ${correctFormType})` : ''}`);\n      } else {\n        setMessage('Error recording form detection feedback');\n      }\n    } catch (e) {\n      setMessage('Error recording form detection feedback: ' + e.message);\n    }\n  };\n\n  const groupExtractionsByForm = (extractions) => {\n    const grouped = {};\n    extractions.forEach(ex => {\n      const formDetectionId = ex.form_detection_id || 'unknown';\n      if (!grouped[formDetectionId]) {\n        grouped[formDetectionId] = {\n          formDetection: {\n            form_detection_id: formDetectionId,\n            form_type: ex.form_type,\n            form_confidence: ex.form_confidence,\n            form_pattern: ex.form_pattern\n          },\n          extractions: []\n        };\n      }\n      grouped[formDetectionId].extractions.push(ex);\n    });\n    return grouped;\n  };\n\n  const getConfidenceColor = (confidence) => {\n    if (confidence >= 0.8) return '#4caf50'; // Green\n    if (confidence >= 0.6) return '#ff9800'; // Orange\n    return '#f44336'; // Red\n  };\n\n  const getConfidenceBackground = (confidence) => {\n    if (confidence < 0.7) return '#fff3cd'; // Light yellow warning\n    return 'transparent';\n  };\n\n  const getWarningIcon = (extraction) => {\n    const warnings = [];\n    \n    // Low confidence warning\n    if (extraction.field_confidence < 0.7) {\n      warnings.push('⚠️ Low confidence');\n    }\n    \n    // False positive warning\n    if (extraction.pattern_stats?.false_positive_rate > 0.3) {\n      warnings.push('🚨 High false positive rate');\n    }\n    \n    // Zero value warning\n    if (extraction.extracted_value === '$0.00' || extraction.extracted_value === '0.00') {\n      warnings.push('💰 Zero value detected');\n    }\n    \n    return warnings;\n  };\n\n  // Fetch logs from backend\n  const fetchLogs = async () => {\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/logs?limit=200`);\n      if (resp.ok) {\n        const data = await resp.json();\n        setLogs(data.logs || []);\n      }\n    } catch (e) {\n      console.error('Error fetching logs:', e);\n    }\n  };\n\n  // Clear logs\n  const clearLogs = async () => {\n    try {\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/logs`, {\n        method: 'DELETE'\n      });\n      if (resp.ok) {\n        setLogs([]);\n        setMessage('Logs cleared');\n      }\n    } catch (e) {\n      setMessage('Error clearing logs: ' + e.message);\n    }\n  };\n\n  // Start log polling\n  const startLogPolling = () => {\n    setLogPolling(true);\n  };\n\n  // Stop log polling\n  const stopLogPolling = () => {\n    setLogPolling(false);\n  };\n\n  // Poll logs when logPolling is true\n  useEffect(() => {\n    if (!logPolling) return;\n    pollingRef.current = setInterval(() => {\n      fetchLogs();\n    }, 1000);\n    return () => clearInterval(pollingRef.current);\n  }, [logPolling]);\n\n  // Get log level color\n  const getLogLevelColor = (level) => {\n    switch (level) {\n      case 'ERROR': return '#dc3545';\n      case 'WARNING': return '#ffc107';\n      case 'INFO': return '#17a2b8';\n      default: return '#6c757d';\n    }\n  };\n\n  // Format timestamp\n  const formatTimestamp = (timestamp) => {\n    try {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString();\n    } catch {\n      return timestamp;\n    }\n  };\n\n  const runEnhancedAnalysis = async () => {\n    if (!caseId.trim() || !documentUrls.trim()) {\n      setMessage('Please enter both Case ID and Document URLs');\n      return;\n    }\n\n    setEnhancedAnalysis(null);\n    setMessage('Starting enhanced analysis...');\n    setShowLogs(true);\n    startLogPolling();\n\n    try {\n      const urls = documentUrls.split('\\n').filter(url => url.trim());\n      const requestBody = {\n        case_id: caseId.trim(),\n        document_urls: urls,\n        quick_mode: quickMode\n      };\n\n      const resp = await fetch(`${serverUrl}/enhanced-analysis/enhanced-wi-analysis`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestBody)\n      });\n\n      if (resp.ok) {\n        const result = await resp.json();\n        setEnhancedAnalysis(result);\n        setMessage(`✅ Enhanced analysis completed in ${result.total_time?.toFixed(2) || 0}s`);\n      } else {\n        const error = await resp.text();\n        setMessage(`❌ Analysis failed: ${error}`);\n      }\n    } catch (e) {\n      setMessage(`❌ Analysis error: ${e.message}`);\n    } finally {\n      stopLogPolling();\n      setTimeout(fetchLogs, 1000);\n    }\n  };\n\n  // New functions for pattern learning dashboard\n  const fetchLearningStats = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/learning-stats`);\n      const data = await response.json();\n      setLearningStats(data);\n    } catch (error) {\n      console.error('Error fetching learning stats:', error);\n    }\n  };\n\n  const fetchPatternPerformance = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/pattern-performance`);\n      const data = await response.json();\n      setPatternStats(data);\n    } catch (error) {\n      console.error('Error fetching pattern performance:', error);\n    }\n  };\n\n  const fetchFlaggedPatterns = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/flagged-patterns`);\n      const data = await response.json();\n      setFlaggedPatterns(data.flagged_patterns || []);\n    } catch (error) {\n      console.error('Error fetching flagged patterns:', error);\n    }\n  };\n\n  const fetchPatternSuggestions = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/pattern-learning/pattern-suggestions`);\n      const data = await response.json();\n      setPatternSuggestions(data.suggestions || []);\n    } catch (error) {\n      console.error('Error fetching pattern suggestions:', error);\n    }\n  };\n\n  const loadPatternLearningData = () => {\n    fetchLearningStats();\n    fetchPatternPerformance();\n    fetchFlaggedPatterns();\n    fetchPatternSuggestions();\n  };\n\n  const renderPatternLearningDashboard = () => (\n    <div className=\"pattern-learning-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2>Pattern Learning Dashboard</h2>\n        <button onClick={loadPatternLearningData} className=\"refresh-btn\">\n          🔄 Refresh Data\n        </button>\n      </div>\n\n      {/* Learning Stats Overview */}\n      {learningStats && (\n        <div className=\"stats-overview\">\n          <h3>📊 Learning Statistics</h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.total_patterns}</div>\n              <div className=\"stat-label\">Total Patterns</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.flagged_patterns}</div>\n              <div className=\"stat-label\">Flagged Patterns</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.total_feedback}</div>\n              <div className=\"stat-label\">Total Feedback</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.feedback_accuracy.toFixed(1)}%</div>\n              <div className=\"stat-label\">Feedback Accuracy</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.avg_success_rate}%</div>\n              <div className=\"stat-label\">Avg Success Rate</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{learningStats.total_extractions}</div>\n              <div className=\"stat-label\">Total Extractions</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Flagged Patterns */}\n      {flaggedPatterns.length > 0 && (\n        <div className=\"flagged-patterns\">\n          <h3>🚨 Flagged Patterns ({flaggedPatterns.length})</h3>\n          <div className=\"flagged-patterns-list\">\n            {flaggedPatterns.map((pattern, index) => (\n              <div key={index} className=\"flagged-pattern-card\">\n                <div className=\"pattern-header\">\n                  <span className=\"pattern-id\">{pattern.pattern_id}</span>\n                  <span className=\"failure-count\">❌ {pattern.failure_count} failures</span>\n                </div>\n                <div className=\"pattern-stats\">\n                  <span>Success: {pattern.success_count}</span>\n                  <span>Total: {pattern.total_extractions}</span>\n                  <span>Confidence: {(pattern.average_confidence * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"pattern-text\">\n                  <strong>Pattern:</strong> <code>{pattern.pattern_text}</code>\n                </div>\n                <div className=\"pattern-field\">\n                  <strong>Field:</strong> {pattern.field_name}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Pattern Suggestions */}\n      {patternSuggestions.length > 0 && (\n        <div className=\"pattern-suggestions\">\n          <h3>💡 Pattern Suggestions ({patternSuggestions.length})</h3>\n          <div className=\"suggestions-list\">\n            {patternSuggestions.map((suggestion, index) => (\n              <div key={index} className=\"suggestion-card\">\n                <div className=\"suggestion-header\">\n                  <span className=\"suggestion-type\">{suggestion.suggestion_type}</span>\n                  <span className=\"suggestion-confidence\">\n                    Confidence: {(suggestion.confidence * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"suggestion-pattern\">\n                  <strong>Suggested Pattern:</strong>\n                  <code>{suggestion.suggested_pattern}</code>\n                </div>\n                <div className=\"suggestion-reasoning\">\n                  <strong>Reasoning:</strong> {suggestion.reasoning}\n                </div>\n                <div className=\"suggestion-actions\">\n                  <button className=\"btn-primary\">Apply Suggestion</button>\n                  <button className=\"btn-secondary\">Test Pattern</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Pattern Performance Table */}\n      {patternStats && patternStats.patterns && (\n        <div className=\"pattern-performance\">\n          <h3>📈 Pattern Performance</h3>\n          <div className=\"performance-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Pattern ID</th>\n                  <th>Field</th>\n                  <th>Success Rate</th>\n                  <th>Total</th>\n                  <th>Confidence</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {patternStats.patterns.map((pattern, index) => {\n                  const successRate = pattern.total_extractions > 0 \n                    ? (pattern.success_count / pattern.total_extractions * 100).toFixed(1)\n                    : 0;\n                  return (\n                    <tr key={index} className={pattern.flagged_for_review ? 'flagged-row' : ''}>\n                      <td>{pattern.pattern_id}</td>\n                      <td>{pattern.field_name}</td>\n                      <td>{successRate}%</td>\n                      <td>{pattern.total_extractions}</td>\n                      <td>{(pattern.average_confidence * 100).toFixed(1)}%</td>\n                      <td>\n                        {pattern.flagged_for_review ? (\n                          <span className=\"status-flagged\">🚨 Flagged</span>\n                        ) : (\n                          <span className=\"status-ok\">✅ OK</span>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {!learningStats && (\n        <div className=\"no-data\">\n          <p>No pattern learning data available. Click \"Refresh Data\" to load statistics.</p>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"pattern-learning-container\">\n      <div className=\"tabs\">\n        <button \n          className={activeTab === 'endpoint-tester' ? 'active' : ''} \n          onClick={() => setActiveTab('endpoint-tester')}\n        >\n          Endpoint Tester\n        </button>\n        <button \n          className={activeTab === 'pattern-dashboard' ? 'active' : ''} \n          onClick={() => setActiveTab('pattern-dashboard')}\n        >\n          Pattern Learning Dashboard\n        </button>\n      </div>\n\n      {activeTab === 'endpoint-tester' && renderEndpointTester()}\n      {activeTab === 'pattern-dashboard' && renderPatternLearningDashboard()}\n\n      {/* Regex Tester Modal */}\n      {showRegexTester && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Test Regex Pattern</h3>\n              <button onClick={() => setShowRegexTester(false)}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label>Regex Pattern:</label>\n                <input\n                  type=\"text\"\n                  value={regexTestPattern}\n                  onChange={(e) => setRegexTestPattern(e.target.value)}\n                  placeholder=\"Enter regex pattern...\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Test Text:</label>\n                <textarea\n                  value={regexTestText}\n                  onChange={(e) => setRegexTestText(e.target.value)}\n                  placeholder=\"Enter text to test against...\"\n                  rows=\"4\"\n                />\n              </div>\n              <button onClick={testRegexPattern} className=\"btn-primary\">\n                Test Pattern\n              </button>\n              {regexTestResults && (\n                <div className=\"test-results\">\n                  <h4>Test Results:</h4>\n                  <p>Matches found: {regexTestResults.match_count}</p>\n                  {regexTestResults.matches.length > 0 && (\n                    <div>\n                      <strong>Matches:</strong>\n                      <ul>\n                        {regexTestResults.matches.map((match, index) => (\n                          <li key={index}>{match}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PatternLearningFeedback; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}